<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WuShaohongのBlog</title>
  
  <subtitle>故不积跬步，无以至千里；不积小流，无以成江海。</subtitle>
  <link href="https://wushaohong.gitee.io/atom.xml" rel="self"/>
  
  <link href="https://wushaohong.gitee.io/"/>
  <updated>2020-11-27T07:23:57.106Z</updated>
  <id>https://wushaohong.gitee.io/</id>
  
  <author>
    <name>WuShaohong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android - CoordinatorLayout</title>
    <link href="https://wushaohong.gitee.io/2020/11/21/Android-CoordinatorLayout/"/>
    <id>https://wushaohong.gitee.io/2020/11/21/Android-CoordinatorLayout/</id>
    <published>2020-11-21T08:13:34.335Z</published>
    <updated>2020-11-27T07:23:57.106Z</updated>
    
    <content type="html"><![CDATA[<p>CoordinatorLayout，顾名思义，协调布局，协调 childview之间的联动。</p><p>Android 5.0 为 Android 引入了 <a href="http://www.google.com/design/spec">Material Design</a>，并为您提供了扩充的 UI 工具包。其中包含CoordinatorLayout、AppBarLayout、Toolbar、CollapsingToolbarLayout等一系列的新控件。</p><h2 id="AppBarLayout"><a href="#AppBarLayout" class="headerlink" title="AppBarLayout"></a>AppBarLayout</h2><h3 id="例子1"><a href="#例子1" class="headerlink" title="例子1"></a>例子1</h3><p><img src="/hexo-blog/2020/11/21/Android-CoordinatorLayout/1.gif" alt="列表浮动（或固定）的顶部View"></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>布局最外层是CoordinatorLayout，包含着两个子View，分别是 AppBarLayout与 RecyclerView，AppBarLayout 当中也包含两个子View（TextView），其中一个设置了 app:layout_scrollFlags=”scroll|enterAlways”（参与滑动，并且随上滑隐藏，下滑显示），另一个没有设置。</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>源码布局：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.coordinatorlayout.widget.CoordinatorLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">com.google.android.material.appbar.AppBarLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;120dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@android:color/holo_green_light&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;Hello&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;@android:color/holo_red_light&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_scrollFlags</span>=<span class="string">&quot;scroll|enterAlways&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;120dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@android:color/holo_orange_light&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;World&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;@android:color/holo_red_light&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">com.google.android.material.appbar.AppBarLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:visibility</span>=<span class="string">&quot;visible&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_behavior</span>=<span class="string">&quot;@string/appbar_scrolling_view_behavior&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.coordinatorlayout.widget.CoordinatorLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="ScrollFlags属性"><a href="#ScrollFlags属性" class="headerlink" title="ScrollFlags属性"></a>ScrollFlags属性</h3><table><thead><tr><th>Flag名</th><th>对应属性</th><th>含义</th></tr></thead><tbody><tr><td>SCROLL_FLAG_NO_SCROLL</td><td>noScroll</td><td>View 不能被滑动</td></tr><tr><td>SCROLL_FLAG_SCROLL</td><td>scroll</td><td>View 参与滑动，配合其他 Flag使用</td></tr><tr><td>SCROLL_FLAG_EXIT_UNTIL_COLLAPSED</td><td>exitUntilCollapsed</td><td>View 被推出屏幕时，会跟着滑动，直到折叠到 View的最小高度</td></tr><tr><td>SCROLL_FLAG_ENTER_ALWAYS</td><td>enterAlways</td><td>不管是 View是滑出屏幕还是滑进屏幕，该View都能立即响应滑动事件，跟随滑动</td></tr><tr><td>SCROLL_FLAG_ENTER_ALWAYS_COLLAPSED</td><td>enterAlwaysCollapsed</td><td>在 SCROLL_FLAG_ENTER_ALWAYS 的基础上，该 Flag增加了折叠到固定高度的限制</td></tr><tr><td>SCROLL_FLAG_SNAP</td><td>snap</td><td>吸附功能，要么折叠，要么展开</td></tr></tbody></table><p>在 xml中使用：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app:layout_scrollFlags=&quot;scroll|enterAlways&quot;</span><br></pre></td></tr></table></figure><p>在 Java代码中动态设置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AppBarLayout.LayoutParams layoutParams = (AppBarLayout.LayoutParams) textView.getLayoutParams();</span><br><span class="line">layoutParams.setScrollFlags(AppBarLayout.LayoutParams.SCROLL_FLAG_SCROLL | AppBarLayout.LayoutParams.SCROLL_FLAG_ENTER_ALWAYS);</span><br><span class="line">textView.setLayoutParams(layoutParams);</span><br></pre></td></tr></table></figure><h2 id="CollapsingToolbarLayout"><a href="#CollapsingToolbarLayout" class="headerlink" title="CollapsingToolbarLayout"></a>CollapsingToolbarLayout</h2><p>折叠工具栏布局，AppBarLayout下的子控件，专门用来实现子布局内不同元素响应滚动细节的布局。</p><p>官方有提供 Activity的模板例子，参照模板：ScrollingActivity</p><h3 id="例子2"><a href="#例子2" class="headerlink" title="例子2"></a>例子2</h3><p><img src="/hexo-blog/2020/11/21/Android-CoordinatorLayout/2.gif" alt="哔哩哔哩效果"></p><p><img src="/hexo-blog/2020/11/21/Android-CoordinatorLayout/3.gif" alt="仿例子"></p><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p>同样根布局是 CoordinatorLayout，子布局分别是 AppBarLayout与 <code>&lt;include layout=&quot;@layout/content_scrolling&quot; /&gt;</code> （内容为 NestedScrollView包着长文本），AppBarLayout里面是 CollapsingToolbarLayout，CollapsingToolbarLayout的子 View是 ImageView与 Toolbar，Toolbar 主要是左边返回图标，中间标题，右边菜单图标。</p><p>其中，CollapsingToolbarLayout设置 app:layout_scrollFlags=”scroll|exitUntilCollapsed”，该 View参与滑动，并且当上滑到顶部的时候才显示；</p><p>ImageView设置 app:layout_collapseMode=”parallax”，parallax显示与隐藏视觉差模式，app:layout_collapseParallaxMultiplier=”0.7”，0.7 视觉系数；</p><p>Toolbar设置 app:layout_collapseMode=”pin”，pin显示与隐藏固定模式。</p><p>collapseMode：有两个取值，分别是 parallax与 pin。</p><h3 id="实现-1"><a href="#实现-1" class="headerlink" title="实现"></a>实现</h3><p>布局源码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.coordinatorlayout.widget.CoordinatorLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:fitsSystemWindows</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">com.google.android.material.appbar.AppBarLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/app_bar&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;@dimen/app_bar_height&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fitsSystemWindows</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.CoordinatorLayoutApp.AppBarOverlay&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">com.google.android.material.appbar.CollapsingToolbarLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/toolbar_layout&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:fitsSystemWindows</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:contentScrim</span>=<span class="string">&quot;?attr/colorPrimary&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:statusBarScrim</span>=<span class="string">&quot;@android:color/transparent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_scrollFlags</span>=<span class="string">&quot;scroll|exitUntilCollapsed&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:toolbarId</span>=<span class="string">&quot;@+id/toolbar&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 背景图，或者其他播放视频 View、等等 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:scaleType</span>=<span class="string">&quot;centerCrop&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:src</span>=<span class="string">&quot;@mipmap/srd&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_collapseMode</span>=<span class="string">&quot;parallax&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_collapseParallaxMultiplier</span>=<span class="string">&quot;0.7&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:fitsSystemWindows</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 顶部 Toolbar --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">androidx.appcompat.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/toolbar&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;?attr/actionBarSize&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:padding</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:contentInsetStart</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:contentInsetStartWithNavigation</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_collapseMode</span>=<span class="string">&quot;pin&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:popupTheme</span>=<span class="string">&quot;@style/Theme.CoordinatorLayoutApp.PopupOverlay&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@android:color/transparent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingStart</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingEnd</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center_vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment">&lt;!-- 左边返回图标 --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:id</span>=<span class="string">&quot;@+id/toolbar_back&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_centerVertical</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:src</span>=<span class="string">&quot;@drawable/ic_baseline_arrow_back_24&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment">&lt;!-- Title --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:id</span>=<span class="string">&quot;@+id/toolbar_title_layout&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:visibility</span>=<span class="string">&quot;visible&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_centerInParent</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                        <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">android:src</span>=<span class="string">&quot;@drawable/ic_play&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_play&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">android:text</span>=<span class="string">&quot;立即播放&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">android:textColor</span>=<span class="string">&quot;@android:color/white&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment">&lt;!-- 右边菜单图标 --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_centerVertical</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_alignParentEnd</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:src</span>=<span class="string">&quot;@drawable/ic_more&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">androidx.appcompat.widget.Toolbar</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">com.google.android.material.appbar.CollapsingToolbarLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">com.google.android.material.appbar.AppBarLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span>=<span class="string">&quot;@layout/content_scrolling&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.coordinatorlayout.widget.CoordinatorLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>实现上面的布局，就能够实现标题栏滑动折叠了，但是还差哔哩哔哩的播放页面下滑显示标题。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置空的标题</span></span><br><span class="line">toolbar.setTitle(<span class="string">&quot;&quot;</span>);</span><br><span class="line">collapsingToolbarLayout.setTitle(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// AppBarLayout添加偏移量改变监听</span></span><br><span class="line">appBarLayout.addOnOffsetChangedListener(<span class="keyword">new</span> AppBarLayout.OnOffsetChangedListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onOffsetChanged</span><span class="params">(AppBarLayout appBarLayout, <span class="keyword">int</span> verticalOffset)</span> </span>&#123;</span><br><span class="line">        collapsingToolbarLayout.setTitle(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="comment">// 偏移量大于 AppBarLayout的高度的5分之3</span></span><br><span class="line">        <span class="keyword">if</span> (Math.abs(verticalOffset) &gt; appBarLayout.getTotalScrollRange() / <span class="number">5</span> * <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="comment">// Toolbar标题显示</span></span><br><span class="line">            llToolbarTitleLayout.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;  <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 否则隐藏</span></span><br><span class="line">            llToolbarTitleLayout.setVisibility(View.GONE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>接着，点击标题之后，展开折叠的 CollapsingToolbarLayout的 ImageView，（模拟进入播放状态）将其设置成为置顶，并且将 NestedScrollView（也就是 <code>&lt;include layout=&quot;@layout/content_scrolling&quot; /&gt;</code>）滑动到最顶端。</p><p>设置标题点击事件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将AppBarLayout展开</span></span><br><span class="line">appBarLayout.setExpanded(<span class="keyword">true</span>);</span><br><span class="line"><span class="comment">// NestedScrollView 滑动顶部</span></span><br><span class="line">nsvVideoIntroduction.fullScroll(View.FOCUS_UP);</span><br><span class="line"><span class="comment">// 固定</span></span><br><span class="line">AppBarLayout.LayoutParams layoutParams = (AppBarLayout.LayoutParams) collapsingToolbarLayout.getLayoutParams();</span><br><span class="line">layoutParams.setScrollFlags(AppBarLayout.LayoutParams.SCROLL_FLAG_NO_SCROLL);</span><br><span class="line">collapsingToolbarLayout.setLayoutParams(layoutParams);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;CoordinatorLayout，顾名思义，协调布局，协调 childview之间的联动。&lt;/p&gt;
&lt;p&gt;Android 5.0 为 Android 引入了 &lt;a href=&quot;http://www.google.com/design/spec&quot;&gt;Material Desi</summary>
      
    
    
    
    <category term="Android" scheme="https://wushaohong.gitee.io/categories/Android/"/>
    
    
    <category term="UI" scheme="https://wushaohong.gitee.io/tags/UI/"/>
    
  </entry>
  
  <entry>
    <title>Android (Java)一行注解申请权限AOP方式最佳实现</title>
    <link href="https://wushaohong.gitee.io/2020/11/11/Android%E4%B8%80%E8%A1%8C%E6%B3%A8%E8%A7%A3%E7%94%B3%E8%AF%B7%E6%9D%83%E9%99%90AOP%E6%96%B9%E5%BC%8F%E6%9C%80%E4%BD%B3%E5%AE%9E%E7%8E%B0/"/>
    <id>https://wushaohong.gitee.io/2020/11/11/Android%E4%B8%80%E8%A1%8C%E6%B3%A8%E8%A7%A3%E7%94%B3%E8%AF%B7%E6%9D%83%E9%99%90AOP%E6%96%B9%E5%BC%8F%E6%9C%80%E4%BD%B3%E5%AE%9E%E7%8E%B0/</id>
    <published>2020-11-11T08:23:41.012Z</published>
    <updated>2020-11-11T08:38:34.481Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Android-Java-一行注解申请权限AOP方式最佳实现"><a href="#Android-Java-一行注解申请权限AOP方式最佳实现" class="headerlink" title="Android (Java)一行注解申请权限AOP方式最佳实现"></a>Android (Java)一行注解申请权限AOP方式最佳实现</h2><h3 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h3><p>​            AOP （面向切面编程），Aspect Oriented Programming的缩写，意为：面向切面编程，通过预编译方式和运行期间动态代理实现程序功能的统一维护的一种技术。AOP是OOP的延续，是软件开发中的一个热点，也是Spring框架中的一个重要内容，是函数式编程的一种衍生范型。利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。（百度百科）</p><p>​            Android权限，做Android开发的都知道，申请权限虽然简单，但是每次使用都写一次繁琐的申请流程。当然，github上面也有很多比较优秀的开源权限申请框架。</p><p>​            所谓“不想当将军的士兵不是好士兵”，“不想‘偷懒’的程序员不是好程序员”。因此，我本着偷懒偷到极致的想法，利用aspectjrt aop编程方式开发一个权限申请工具，做到在实际使用当中一行代码完成申请权限。（牛吹得有点过了）</p><p>项目github地址：<a href="https://links.jianshu.com/go?to=https://github.com/wushaohongly/AopPermission">https://github.com/wushaohongly/AopPermission</a></p><p>运行效果：</p><p><img src="/hexo-blog/2020/11/11/Android%E4%B8%80%E8%A1%8C%E6%B3%A8%E8%A7%A3%E7%94%B3%E8%AF%B7%E6%9D%83%E9%99%90AOP%E6%96%B9%E5%BC%8F%E6%9C%80%E4%BD%B3%E5%AE%9E%E7%8E%B0/1.jpg"></p><p><img src="/hexo-blog/2020/11/11/Android%E4%B8%80%E8%A1%8C%E6%B3%A8%E8%A7%A3%E7%94%B3%E8%AF%B7%E6%9D%83%E9%99%90AOP%E6%96%B9%E5%BC%8F%E6%9C%80%E4%BD%B3%E5%AE%9E%E7%8E%B0/2.jpg"></p><h3 id="二、依赖配置"><a href="#二、依赖配置" class="headerlink" title="二、依赖配置"></a>二、依赖配置</h3><p>项目 build.gradle</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">dependencies</span> &#123;</span><br><span class="line">        <span class="string">...</span></span><br><span class="line">        <span class="string">classpath</span> <span class="string">&#x27;org.aspectj:aspectjtools:1.9.5&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="string">allprojects</span> &#123;</span><br><span class="line">        <span class="string">repositories</span> &#123;</span><br><span class="line">            <span class="string">...</span></span><br><span class="line">            <span class="string">maven</span> &#123; <span class="string">url</span> <span class="string">&#x27;https://jitpack.io&#x27;</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>app build.gradle</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">dependencies</span> &#123;</span><br><span class="line">    <span class="string">...</span></span><br><span class="line">    <span class="string">implementation</span> <span class="string">&#x27;org.aspectj:aspectjrt:1.9.5&#x27;</span></span><br><span class="line">    <span class="string">implementation</span> <span class="string">&#x27;com.github.wushaohongly:AopPermission:1.0.0&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">//</span> <span class="string">最后增加</span></span><br><span class="line"><span class="string">/**</span></span><br><span class="line"> <span class="string">*</span> <span class="string">aspectjrt</span> <span class="string">编译相关</span></span><br><span class="line"> <span class="string">*/</span></span><br><span class="line"><span class="string">import</span> <span class="string">org.aspectj.bridge.IMessage</span></span><br><span class="line"><span class="string">import</span> <span class="string">org.aspectj.bridge.MessageHandler</span></span><br><span class="line"><span class="string">import</span> <span class="string">org.aspectj.tools.ajc.Main</span></span><br><span class="line"></span><br><span class="line"><span class="string">final</span> <span class="string">def</span> <span class="string">log</span> <span class="string">=</span> <span class="string">project.logger</span></span><br><span class="line"><span class="string">final</span> <span class="string">def</span> <span class="string">variants</span> <span class="string">=</span> <span class="string">project.android.applicationVariants</span></span><br><span class="line"></span><br><span class="line"><span class="string">//</span> <span class="string">在构建工程时，执行编辑</span></span><br><span class="line"><span class="string">variants.all</span> &#123; <span class="string">variant</span> <span class="string">-&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="string">//</span>    <span class="string">if</span> <span class="string">(!variant.buildType.isDebuggable())</span> &#123;</span><br><span class="line"><span class="string">//</span>        <span class="string">log.debug(&quot;Skipping</span> <span class="string">non-debuggable</span> <span class="string">build</span> <span class="string">type</span> <span class="string">&#x27;$&#123;variant.buildType.name&#125;&#x27;</span><span class="string">.&quot;)</span></span><br><span class="line"><span class="string">//</span>        <span class="string">return;</span></span><br><span class="line"><span class="string">//</span>    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="string">JavaCompile</span> <span class="string">javaCompile</span> <span class="string">=</span> <span class="string">variant.javaCompile</span></span><br><span class="line">    <span class="string">javaCompile.doLast</span> &#123;</span><br><span class="line">        <span class="string">String</span>[] <span class="string">args</span> <span class="string">=</span> [<span class="string">&quot;-showWeaveInfo&quot;</span>,</span><br><span class="line">                         <span class="string">&quot;-1.8&quot;</span>,</span><br><span class="line">                         <span class="string">&quot;-inpath&quot;</span>, <span class="string">javaCompile.destinationDir.toString()</span>,</span><br><span class="line">                         <span class="string">&quot;-aspectpath&quot;</span>, <span class="string">javaCompile.classpath.asPath</span>,</span><br><span class="line">                         <span class="string">&quot;-d&quot;</span>, <span class="string">javaCompile.destinationDir.toString()</span>,</span><br><span class="line">                         <span class="string">&quot;-classpath&quot;</span>, <span class="string">javaCompile.classpath.asPath</span>,</span><br><span class="line">                         <span class="string">&quot;-bootclasspath&quot;</span>, <span class="string">project.android.bootClasspath.join(File.pathSeparator)</span>]</span><br><span class="line">        <span class="string">log.debug</span> <span class="string">&quot;ajc args: &quot;</span> <span class="string">+</span> <span class="string">Arrays.toString(args)</span></span><br><span class="line"></span><br><span class="line">        <span class="string">MessageHandler</span> <span class="string">handler</span> <span class="string">=</span> <span class="string">new</span> <span class="string">MessageHandler(true);</span></span><br><span class="line">        <span class="string">new</span> <span class="string">Main().run(args</span>, <span class="string">handler);</span></span><br><span class="line">        <span class="string">for</span> <span class="string">(IMessage</span> <span class="attr">message :</span> <span class="string">handler.getMessages(null</span>, <span class="literal">true</span><span class="string">))</span> &#123;</span><br><span class="line">            <span class="string">switch</span> <span class="string">(message.getKind())</span> &#123;</span><br><span class="line">                <span class="attr">case IMessage.ABORT:</span></span><br><span class="line">                <span class="attr">case IMessage.ERROR:</span></span><br><span class="line">                <span class="attr">case IMessage.FAIL:</span></span><br><span class="line">                    <span class="string">log.error</span> <span class="string">message.message</span>, <span class="string">message.thrown</span></span><br><span class="line">                    <span class="string">break;</span></span><br><span class="line">                <span class="attr">case IMessage.WARNING:</span></span><br><span class="line">                    <span class="string">log.warn</span> <span class="string">message.message</span>, <span class="string">message.thrown</span></span><br><span class="line">                    <span class="string">break;</span></span><br><span class="line">                <span class="attr">case IMessage.INFO:</span></span><br><span class="line">                    <span class="string">log.info</span> <span class="string">message.message</span>, <span class="string">message.thrown</span></span><br><span class="line">                    <span class="string">break;</span></span><br><span class="line">                <span class="attr">case IMessage.DEBUG:</span></span><br><span class="line">                    <span class="string">log.debug</span> <span class="string">message.message</span>, <span class="string">message.thrown</span></span><br><span class="line">                    <span class="string">break;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、使用"><a href="#三、使用" class="headerlink" title="三、使用"></a>三、使用</h3><p>以申请拨打电话与读外置存储权限为例，click是一个需要拥有权限才能执行的方法，在click方法加入@PermissionsCheck（权限名称字符串数组）注解，执行click方法前就会申请注解生命的权限。</p><p><em>如果申请成功，则会执行click方法体，否则将不执行click方法体。</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PermissionsCheck(&#123;Manifest.permission.CALL_PHONE, Manifest.permission.READ_EXTERNAL_STORAGE&#125;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">click</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">    Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;权限申请成功&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、支持配置拒绝权限弹框"><a href="#四、支持配置拒绝权限弹框" class="headerlink" title="四、支持配置拒绝权限弹框"></a>四、支持配置拒绝权限弹框</h3><p>在三，当用户拒绝权限后，因为不执行click方法体，没有其他友好性提示，显然是不合理的。为了增加扩展性，类库支持拒绝权限后弹出自定义Dialog。<br>自定义的Dialog须继承与类库的PermissionRefuseDialog。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyRefuseDialog</span> <span class="keyword">extends</span> <span class="title">PermissionRefuseDialog</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyRefuseDialog</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">        setContentView(R.layout.布局);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPermissions</span><span class="params">(String[] permissions)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 父类赋值 permissions</span></span><br><span class="line">        <span class="keyword">super</span>.setPermissions(permissions);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这里拿到拒绝的权限数组</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在BaseActivity / BaseFragment当中设置，此处为什么呢？因为Dialog是需要依赖Window，所以需要在具体的某个Activity / Fragment当中创建。（或者还有更好的方式实现）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将自定义的Dialog，设置到 library中</span></span><br><span class="line">AopPermissionsConfig.setRefuseDialog(<span class="keyword">new</span> MyRefuseDialog(<span class="keyword">this</span>));</span><br></pre></td></tr></table></figure><h3 id="五、混淆配置"><a href="#五、混淆配置" class="headerlink" title="五、混淆配置"></a>五、混淆配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-keep class com.wushaohong.library.permissions.**&#123;*;&#125;</span><br></pre></td></tr></table></figure><h3 id="六、结语"><a href="#六、结语" class="headerlink" title="六、结语"></a>六、结语</h3><p>1、实测是运行在Android10系统，编译环境jdk1.8，据了解，aspectjrt1.9.5最低支持Android7.0<br>2、不支持Kotlin语言（kotlin版已实现，有时间再整理上传）<br>3、如有不合理之处，欢迎各位指点，本人感激不尽。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Android-Java-一行注解申请权限AOP方式最佳实现&quot;&gt;&lt;a href=&quot;#Android-Java-一行注解申请权限AOP方式最佳实现&quot; class=&quot;headerlink&quot; title=&quot;Android (Java)一行注解申请权限AOP方式最佳实现&quot;</summary>
      
    
    
    
    <category term="Android" scheme="https://wushaohong.gitee.io/categories/Android/"/>
    
    
    <category term="AOP" scheme="https://wushaohong.gitee.io/tags/AOP/"/>
    
  </entry>
  
  <entry>
    <title>Android-Cling投屏</title>
    <link href="https://wushaohong.gitee.io/2020/10/29/Android-Cling%E6%8A%95%E5%B1%8F/"/>
    <id>https://wushaohong.gitee.io/2020/10/29/Android-Cling%E6%8A%95%E5%B1%8F/</id>
    <published>2020-10-29T05:52:19.720Z</published>
    <updated>2020-11-11T08:33:51.630Z</updated>
    
    <content type="html"><![CDATA[<p>​    一年多之前买了个小米盒子，放在出租屋，HDMI 外接显示器当电视使用，用着确实很nice，看网络电视直播，用手机或者ipad投屏看剧。之前也业余搞过一个观看m3u8 源电视直播的app，主要是一些CCTV，卫视频道，一些电影和动漫直播链接都是虎牙拿过来（不稳定，老是失效），app 运行在小米盒子上还算不错，也可以运行在基于Android 的电视平台。</p><p>​    小米盒子的投屏服务端用的是乐播投屏，平时使用投屏的时候也有乐播的广告logo。看了一下乐播的投屏，开发的话直接用sdk 固然是最快最便捷的，不过乐播的sdk 是要钱的。我对钱没兴趣，所以我选择撸起袖子自己琢磨。查阅了一下手机投屏的技术方案，有许所获。</p><h2 id="Android-基于Cling投屏实现"><a href="#Android-基于Cling投屏实现" class="headerlink" title="Android - 基于Cling投屏实现"></a>Android - 基于Cling投屏实现</h2><h3 id="投屏技术"><a href="#投屏技术" class="headerlink" title="投屏技术"></a>投屏技术</h3><p>1、推送投屏</p><p>​            推送投屏的方式，更多类似于“Wifi点播”，由推送端推送播放链接，接收端接收链接（实际当中，链接等信息是需要封装在具体的协议当中发送），进行播放。接收端播放过程中较为自主，只依赖播放源，网速等因素，无需依赖推送端。也就是说通过手机投屏app，将在线电影投屏到TV端播放，投屏成功之后，就可以结束app，不影响TV端的播放。</p><p>2、镜像同步</p><p>​            镜像同步的方式是”画面即时同步传输“，影像数据是实时发出、接收并同时解码播放，不同于在线点播时的“先缓存一部分、再边下载边播放”。所以，一般镜像同屏时，投影出来的画面对比手机画面，都会有一定的延迟。具体的延迟程度取决于手机的硬件品质（如CPU、运存等，毕竟手机是作为信号发射源的，本身的硬件决定了信号发出的品质）；外在影响因素还有：如果是插线同屏的，数据通过手机线进行传输，如果数据线老化、或者品质不好，传输的质量自然也会受影响；而“无线同屏”的话，虽然没有线的束缚，但是“无线信号的传输”同样有外界的影响因素，比如路由器的品质、其他设备的干扰等。因此，无论是“插线同屏”或者“无线同屏”，因为“镜像同步”这种要求性较高的技术特点，实际使用中多少都会有些延迟，但一般2秒以内的延迟属于正常范围，当然目前技术可以实现更低的延时。</p><p>​            个人认为，镜像同步和分屏是有区别的。日常开会，主讲人通常将会议内容，通过“投屏/投影”，投放到大屏幕上面。这里的我们所说的投屏，通常是镜像同步，或者分屏。</p><p>​            分屏，也就是通过显卡硬件输出方式实现多路信号输出，由硬件的IO设备直接输出显示（就像我们多屏办公的样子，一台主机外接多个显示器），不需要软件编码与解码，优点延时低。</p><p>​            投影，和分屏同理，只是最终的显示方式是投影仪投影显示。</p><h3 id="DLNA"><a href="#DLNA" class="headerlink" title="DLNA"></a>DLNA</h3><p>​            DLNA（DIGITAL LIVING NETWORK ALLIANCE，数字生活网络联盟) 其前身是DHWG （Digital Home Working Group，数字家庭工作组），成立于2003年6月24 日， 是由索尼、英特尔、微软等发起成立的一个非营利性的、合作性质的商业组织。（百度….）</p><h4 id="UPNP协议"><a href="#UPNP协议" class="headerlink" title="UPNP协议"></a>UPNP协议</h4><p>​            通用即插即用（英语：Universal Plug and Play，简称UPnP）是由“通用即插即用论坛”（UPnP™ Forum）推广的一套网络协议。该协议的目标是使家庭网络（数据共享、通信和娱乐）和公司网络中的各种设备能够相互无缝连接，并简化相关网络的实现。UPnP通过定义和发布基于开放、因特网通讯网协议标准的UPnP设备控制协议来实现这一目标。<br>UPnP这个概念是从即插即用（Plug-and-play）派生而来的，即插即用是一种热拔插技术。</p><p><img src="/hexo-blog/2020/10/29/Android-Cling%E6%8A%95%E5%B1%8F/1.jpg" alt="UPNP协议"></p><h3 id="Miracast"><a href="#Miracast" class="headerlink" title="Miracast"></a>Miracast</h3><p>​            Miracast是由Wi-Fi联盟于2012年所制定，以Wi-Fi直连为基础的无线显示标准。支持此标准的设备可通过无线方式分享视频画面，例如手机可通过Miracast将影片或照片直接在电视或其他装置播放而无需受到连接线缆长度的影响。与DLNA不同的是，Miracast 也有类似于AirPlay的镜像功能，可以将手机中屏幕内容直接投放到高清电视屏幕里，这样你也可以通过电视屏幕来玩游戏了。Android4.2版本以后系统标配此功能（在设置或显示菜单中可以找到，应用名称诸如：Wlan display、Wifi display、Miracast、Allshare cast、Mirroring screen、无线显示等，只是各手机厂家命名不同而已）。可以将手机屏幕通过无线显示接收器将画面无线传输到其他较大屏幕上，如客厅电视，会议室投影仪。画面传输延时150ms以下，几乎同时。点击此功能，但没有任何反应，因为此项功能需要配件支持。<br>​            个人使用感觉，Miracast的镜像功能真的很卡…</p><h3 id="AirPlay"><a href="#AirPlay" class="headerlink" title="AirPlay"></a>AirPlay</h3><p>​            AirPlay 是苹果开发的一种无线技术，可以通过WiFi 将iPhone 、iPad、iPodtouch 等iOS 设备上的包括图片、音频、视频通过无线的方式传输到支持AirPlay 设备。AirPlay 具备与DLNA 所没有的镜像功能，这一功能叫AirPlay 镜像，可将iPhone 或iPad 上的画面无线传输到电视上，也就是说你设备显示的是什么，电视屏幕显示就就是什么，而不仅限于图片和视频。你可以拿着iPad 来当做方向盘，然后看着大屏玩游戏。另外AirPlay 镜像最牛地方是它可以实现双屏游戏，让你的游戏有更多的交互。比如，电视里显示的是游戏画面，而iPad 上显示的是比赛的路线图。<br>​            目前，苹果的AirPlay 更多的只适用于认证过的苹果设备，目前支持这一技术的主要是苹果自己的设备包括了iPad、iPhone、Apple TV等</p><h3 id="Cling"><a href="#Cling" class="headerlink" title="Cling"></a>Cling</h3><p>常用的投屏开源库有：Platinum、CyberGarage、Cling</p><p>​        Cling是一个Java开源项目，开发者可直接编译源码生成jar包导入到Android项目中。目前Cling已停止维护。</p><p>​        Platinum是一个C库，它支持编译成多个平台的库，如Windows、Mac、IOS和Android等。但其编译流程相对来说比较复杂，Android使用Platinum开发需要用到jni。</p><p>​        CyberGarage是一个Java Upnp开发包，开发者将其项目源码添加到Android工程当中，作为Android Library或者 Java Library直接使用。CyberGarage提供了jar包下载地址，但CyberGarage源码存在一些bug，需要对源码进行修改，因此不建议直接下载jar包。</p><p>Cling是实现Dlna的Upnp协议的第三方投屏开源库。</p><p><a href="https://hexo.io/docs/server.html">Cling开源库GitHub地址</a></p><p><img src="/hexo-blog/2020/10/29/Android-Cling%E6%8A%95%E5%B1%8F/2.jpg" alt="实现Demo效果"></p><p>Android 项目导入依赖</p><p>项目 build.gradle</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">buildscript</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="string">repositories</span> &#123;</span><br><span class="line">        <span class="string">...</span></span><br><span class="line"></span><br><span class="line">        <span class="string">mavenCentral()</span></span><br><span class="line">        <span class="string">maven</span> &#123;</span><br><span class="line">            <span class="string">url</span> <span class="string">&#x27;http://4thline.org/m2&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">allprojects</span> &#123;</span><br><span class="line">    <span class="string">repositories</span> &#123;</span><br><span class="line">        <span class="string">...</span></span><br><span class="line"></span><br><span class="line">        <span class="string">mavenCentral()</span></span><br><span class="line">        <span class="string">maven</span> &#123;</span><br><span class="line">            <span class="string">url</span> <span class="string">&#x27;http://4thline.org/m2&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>app build.gradle</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">android</span> &#123;</span><br><span class="line">    <span class="string">...</span></span><br><span class="line"></span><br><span class="line">    <span class="string">packagingOptions</span> &#123;</span><br><span class="line">        <span class="string">exclude</span> <span class="string">&#x27;META-INF/LICENSE.txt&#x27;</span></span><br><span class="line">        <span class="string">exclude</span> <span class="string">&#x27;META-INF/beans.xml&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">dependencies</span> &#123;</span><br><span class="line">    <span class="string">...</span></span><br><span class="line"></span><br><span class="line">    <span class="string">//</span> <span class="string">Cling</span> <span class="string">library</span></span><br><span class="line">    <span class="string">implementation</span> <span class="string">&#x27;org.fourthline.cling:cling-core:2.1.1&#x27;</span></span><br><span class="line">    <span class="string">implementation</span> <span class="string">&#x27;org.fourthline.cling:cling-support:2.1.1&#x27;</span></span><br><span class="line">    <span class="string">//</span> <span class="string">Jetty</span> <span class="string">library</span></span><br><span class="line">    <span class="string">implementation</span> <span class="string">&#x27;org.eclipse.jetty:jetty-server:8.1.12.v20130726&#x27;</span></span><br><span class="line">    <span class="string">implementation</span> <span class="string">&#x27;org.eclipse.jetty:jetty-servlet:8.1.12.v20130726&#x27;</span></span><br><span class="line">    <span class="string">implementation</span> <span class="string">&#x27;org.eclipse.jetty:jetty-client:8.1.12.v20130726&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 权限 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_WIFI_STATE&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.CHANGE_WIFI_MULTICAST_STATE&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WAKE_LOCK&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 声明upnp服务实现类（服务） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">&quot;org.fourthline.cling.android.AndroidUpnpServiceImpl&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><h4 id="1、启动Upnp服务，搜索投屏设备"><a href="#1、启动Upnp服务，搜索投屏设备" class="headerlink" title="1、启动Upnp服务，搜索投屏设备"></a>1、启动Upnp服务，搜索投屏设备</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明</span></span><br><span class="line"><span class="comment">// Upnp服务</span></span><br><span class="line"><span class="keyword">private</span> AndroidUpnpService mUpnpService = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// Upnp控制点</span></span><br><span class="line"><span class="keyword">private</span> ControlPoint mControlPoint;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 服务连接</span></span><br><span class="line"><span class="keyword">private</span> ServiceConnection serviceConnection;</span><br><span class="line"></span><br><span class="line">serviceConnection = <span class="keyword">new</span> ServiceConnection() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName componentName, IBinder iBinder)</span> </span>&#123;</span><br><span class="line">        mUpnpService = (AndroidUpnpService) iBinder;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 服务回调</span></span><br><span class="line">        mUpnpService.getRegistry().addListener(<span class="keyword">new</span> DefaultRegistryListener() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deviceAdded</span><span class="params">(Registry registry, <span class="keyword">final</span> Device device)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">super</span>.deviceAdded(registry, device);</span><br><span class="line"></span><br><span class="line">                Log.e(<span class="string">&quot;wush&quot;</span>, <span class="string">&quot;找到设备：&quot;</span> + device.getDisplayString());</span><br><span class="line">                <span class="comment">// 加入到发现的设备列表</span></span><br><span class="line">                runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                        deviceAdapter.addDevice(device);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deviceRemoved</span><span class="params">(Registry registry, <span class="keyword">final</span> Device device)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">super</span>.deviceRemoved(registry, device);</span><br><span class="line"></span><br><span class="line">                Log.e(<span class="string">&quot;wush&quot;</span>, <span class="string">&quot;移除设备：&quot;</span> + device.getDisplayString());</span><br><span class="line">                <span class="comment">// 从发现的设备列表中移除</span></span><br><span class="line">                runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                        deviceAdapter.removeDevice(device);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        mControlPoint = mUpnpService.getControlPoint();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 启动 Upnp服务</span></span><br><span class="line">    Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, AndroidUpnpServiceImpl.class);</span><br><span class="line">    bindService(intent, serviceConnection, BIND_AUTO_CREATE);</span><br></pre></td></tr></table></figure><p>启动AndroidUpnpServiceImpl 服务后，服务自动开始搜索投屏设备，你也可以通过以下代码手动搜索</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mControlPoint.search();</span><br></pre></td></tr></table></figure><h4 id="2、协议封装"><a href="#2、协议封装" class="headerlink" title="2、协议封装"></a>2、协议封装</h4><p>在步骤1当中，我们已经搜索到设备了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 协议头</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String DIDL_LITE_FOOTER = <span class="string">&quot;&lt;/DIDL-Lite&gt;&quot;</span>;</span><br><span class="line"><span class="comment">// 协议尾</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String DIDL_LITE_HEADER = <span class="string">&quot;&lt;?xml version=\&quot;1.0\&quot;?&gt;&quot;</span> +</span><br><span class="line">    <span class="string">&quot;&lt;DIDL-Lite &quot;</span> + <span class="string">&quot;xmlns=\&quot;urn:schemas-upnp-org:metadata-1-0/DIDL-Lite/\&quot; &quot;</span> +</span><br><span class="line">    <span class="string">&quot;xmlns:dc=\&quot;http://purl.org/dc/elements/1.1/\&quot; &quot;</span> + <span class="string">&quot;xmlns:upnp=\&quot;urn:schemas-upnp-org:metadata-1-0/upnp/\&quot; &quot;</span> +</span><br><span class="line">    <span class="string">&quot;xmlns:dlna=\&quot;urn:schemas-dlna-org:metadata-1-0/\&quot;&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 类型定义</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> VIDEO_TYPE = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> AUDIO_TYPE = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> IMAGE_TYPE = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 投屏前需要确保 mUpnpService != null || mCurrentDevice != null || mControlPoint != null</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 媒体投屏（视频，音频，图片）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setAVTransportURI</span><span class="params">(String url, <span class="keyword">int</span> mediaType)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// mCurrentDevice 为在步骤1 搜索到的设备中的一个</span></span><br><span class="line">    Service service = mCurrentDevice.findService(<span class="keyword">new</span> UDAServiceType(<span class="string">&quot;AVTransport&quot;</span>));</span><br><span class="line"></span><br><span class="line">    String metadata = pushMediaToRender(url, <span class="string">&quot;id&quot;</span>, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;0&quot;</span>, mediaType);</span><br><span class="line">    mControlPoint.execute(<span class="keyword">new</span> SetAVTransportURI(service, url, metadata) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">success</span><span class="params">(ActionInvocation invocation)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.success(invocation);</span><br><span class="line"></span><br><span class="line">            runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">&quot;投屏成功&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">failure</span><span class="params">(ActionInvocation invocation, UpnpResponse operation, String defaultMsg)</span> </span>&#123;</span><br><span class="line">            Log.e(<span class="string">&quot;wush&quot;</span>, <span class="string">&quot;投屏失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建媒体协议信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">pushMediaToRender</span><span class="params">(String url, String id, String name, String duration, <span class="keyword">int</span> mediaType)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">long</span> size = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">long</span> bitrate = <span class="number">0</span>;</span><br><span class="line">    Res res = <span class="keyword">new</span> Res(<span class="keyword">new</span> MimeType(ProtocolInfo.WILDCARD, ProtocolInfo.WILDCARD), size, url);</span><br><span class="line"></span><br><span class="line">    String creator = <span class="string">&quot;unknow&quot;</span>;</span><br><span class="line">    String resolution = <span class="string">&quot;unknow&quot;</span>;</span><br><span class="line"></span><br><span class="line">    String metadata = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (VIDEO_TYPE == mediaType) &#123;</span><br><span class="line">        VideoItem videoItem = <span class="keyword">new</span> VideoItem(id, <span class="string">&quot;0&quot;</span>, name, creator, res);</span><br><span class="line">        metadata = createItemMetadata(videoItem);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (AUDIO_TYPE == mediaType) &#123;</span><br><span class="line">        AudioItem audioItem = <span class="keyword">new</span> AudioItem(id, <span class="string">&quot;0&quot;</span>, name, creator, res);</span><br><span class="line">        metadata = createItemMetadata(audioItem);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (IMAGE_TYPE == mediaType) &#123;</span><br><span class="line">        ImageItem imageItem = <span class="keyword">new</span> ImageItem(id, <span class="string">&quot;0&quot;</span>, name, creator, res);</span><br><span class="line">        metadata = createItemMetadata(imageItem);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Log.e(<span class="string">&quot;wush&quot;</span>, <span class="string">&quot;metadata: &quot;</span> + metadata);</span><br><span class="line">    <span class="keyword">return</span> metadata;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 协议封装</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">createItemMetadata</span><span class="params">(DIDLObject item)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    StringBuilder metadata = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">    metadata.append(DIDL_LITE_HEADER);</span><br><span class="line"></span><br><span class="line">    metadata.append(String.format(<span class="string">&quot;&lt;item id=\&quot;%s\&quot; parentID=\&quot;%s\&quot; restricted=\&quot;%s\&quot;&gt;&quot;</span>, item.getId(), item.getParentID(), item.isRestricted() ? <span class="string">&quot;1&quot;</span> : <span class="string">&quot;0&quot;</span>));</span><br><span class="line"></span><br><span class="line">    metadata.append(String.format(<span class="string">&quot;&lt;dc:title&gt;%s&lt;/dc:title&gt;&quot;</span>, item.getTitle()));</span><br><span class="line">    String creator = item.getCreator();</span><br><span class="line">    <span class="keyword">if</span> (creator != <span class="keyword">null</span>) &#123;</span><br><span class="line">        creator = creator.replaceAll(<span class="string">&quot;&lt;&quot;</span>, <span class="string">&quot;_&quot;</span>);</span><br><span class="line">        creator = creator.replaceAll(<span class="string">&quot;&gt;&quot;</span>, <span class="string">&quot;_&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    metadata.append(String.format(<span class="string">&quot;&lt;upnp:artist&gt;%s&lt;/upnp:artist&gt;&quot;</span>, creator));</span><br><span class="line"></span><br><span class="line">    metadata.append(String.format(<span class="string">&quot;&lt;upnp:class&gt;%s&lt;/upnp:class&gt;&quot;</span>, item.getClazz().getValue()));</span><br><span class="line"></span><br><span class="line">    SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd&#x27;T&#x27;HH:mm:ss&quot;</span>);</span><br><span class="line">    Date now = <span class="keyword">new</span> Date();</span><br><span class="line">    String time = sdf.format(now);</span><br><span class="line">    metadata.append(String.format(<span class="string">&quot;&lt;dc:date&gt;%s&lt;/dc:date&gt;&quot;</span>, time));</span><br><span class="line"></span><br><span class="line">    Res res = item.getFirstResource();</span><br><span class="line">    <span class="keyword">if</span> (res != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="comment">// protocol info</span></span><br><span class="line">        String protocolInfo = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        ProtocolInfo pi = res.getProtocolInfo();</span><br><span class="line">        <span class="keyword">if</span> (pi != <span class="keyword">null</span>) &#123;</span><br><span class="line">            protocolInfo = String.format(<span class="string">&quot;protocolInfo=\&quot;%s:%s:%s:%s\&quot;&quot;</span>, pi.getProtocol(), pi.getNetwork(), pi.getContentFormatMimeType(), pi</span><br><span class="line">                                         .getAdditionalInfo());</span><br><span class="line">        &#125;</span><br><span class="line">        Log.e(<span class="string">&quot;wush&quot;</span>, <span class="string">&quot;protocolInfo: &quot;</span> + protocolInfo);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// resolution, extra info, not adding yet</span></span><br><span class="line">        String resolution = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (res.getResolution() != <span class="keyword">null</span> &amp;&amp; res.getResolution().length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            resolution = String.format(<span class="string">&quot;resolution=\&quot;%s\&quot;&quot;</span>, res.getResolution());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// duration</span></span><br><span class="line">        String duration = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (res.getDuration() != <span class="keyword">null</span> &amp;&amp; res.getDuration().length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            duration = String.format(<span class="string">&quot;duration=\&quot;%s\&quot;&quot;</span>, res.getDuration());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// res begin</span></span><br><span class="line">        <span class="comment">// metadata.append(String.format(&quot;&lt;res %s&gt;&quot;, protocolInfo)); // no resolution &amp; duration yet</span></span><br><span class="line">        metadata.append(String.format(<span class="string">&quot;&lt;res %s %s %s&gt;&quot;</span>, protocolInfo, resolution, duration));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// url</span></span><br><span class="line">        String url = res.getValue();</span><br><span class="line">        metadata.append(url);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// res end</span></span><br><span class="line">        metadata.append(<span class="string">&quot;&lt;/res&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    metadata.append(<span class="string">&quot;&lt;/item&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    metadata.append(DIDL_LITE_FOOTER);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> metadata.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3、投屏视频、音频、图片"><a href="#3、投屏视频、音频、图片" class="headerlink" title="3、投屏视频、音频、图片"></a>3、投屏视频、音频、图片</h4><p> 投屏前需要确保 mUpnpService != null || mCurrentDevice != null || mControlPoint != null</p><p>*地址可能已经失效</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 投屏视频</span></span><br><span class="line">String url = <span class="string">&quot;http://vfx.mtime.cn/Video/2019/03/14/mp4/190314223540373995.mp4&quot;</span>;</span><br><span class="line">setAVTransportURI(url, VIDEO_TYPE);</span><br><span class="line"><span class="comment">// 投屏音频</span></span><br><span class="line">String mp3 = <span class="string">&quot;http://111.230.29.242:8080/cheshi.mp3&quot;</span>;</span><br><span class="line">setAVTransportURI(mp3, AUDIO_TYPE);</span><br><span class="line"><span class="comment">// 投屏图片</span></span><br><span class="line">String image = <span class="string">&quot;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1597923118159&amp;di=5d0add2fc13243068afbf07e2ce2842a&amp;imgtype=0&amp;src=http%3A%2F%2Fwww.anqu.com%2Fuploads%2Fallimg%2F1208%2F39-120R3093301.jpg&quot;</span>;</span><br><span class="line">setAVTransportURI(image, IMAGE_TYPE);</span><br></pre></td></tr></table></figure><h4 id="4、获取媒体信息"><a href="#4、获取媒体信息" class="headerlink" title="4、获取媒体信息"></a>4、获取媒体信息</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Service service = mCurrentDevice.findService(<span class="keyword">new</span> UDAServiceType(<span class="string">&quot;AVTransport&quot;</span>));</span><br><span class="line">mControlPoint.execute(<span class="keyword">new</span> GetMediaInfo(service) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">success</span><span class="params">(ActionInvocation invocation)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.success(invocation);</span><br><span class="line">        Log.e(<span class="string">&quot;wush&quot;</span>, <span class="string">&quot;获取媒体信息成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">received</span><span class="params">(ActionInvocation invocation, <span class="keyword">final</span> MediaInfo mediaInfo)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 媒体信息封装在 mediaInfo 对象当中</span></span><br><span class="line">        <span class="comment">// 包括总时长，播放地址等等</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">failure</span><span class="params">(ActionInvocation invocation, UpnpResponse operation, String defaultMsg)</span> </span>&#123;</span><br><span class="line">        Log.e(<span class="string">&quot;wush&quot;</span>, <span class="string">&quot;获取媒体信息失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="5、播放控制，暂停播放-恢复播放-停止播放"><a href="#5、播放控制，暂停播放-恢复播放-停止播放" class="headerlink" title="5、播放控制，暂停播放 / 恢复播放 / 停止播放"></a>5、播放控制，暂停播放 / 恢复播放 / 停止播放</h4><p>暂停播放</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Service service = mCurrentDevice.findService(<span class="keyword">new</span> UDAServiceType(<span class="string">&quot;AVTransport&quot;</span>));</span><br><span class="line">mControlPoint.execute(<span class="keyword">new</span> Pause(service) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">success</span><span class="params">(ActionInvocation invocation)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.success(invocation);</span><br><span class="line"></span><br><span class="line">        runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">&quot;暂停播放&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">failure</span><span class="params">(ActionInvocation invocation, UpnpResponse operation, String defaultMsg)</span> </span>&#123;</span><br><span class="line">        Log.e(<span class="string">&quot;wush&quot;</span>, <span class="string">&quot;暂停失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>恢复播放</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Service service = mCurrentDevice.findService(<span class="keyword">new</span> UDAServiceType(<span class="string">&quot;AVTransport&quot;</span>));</span><br><span class="line">mControlPoint.execute(<span class="keyword">new</span> Play(service) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">success</span><span class="params">(ActionInvocation invocation)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.success(invocation);</span><br><span class="line"></span><br><span class="line">        runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">&quot;恢复播放&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">failure</span><span class="params">(ActionInvocation invocation, UpnpResponse operation, String defaultMsg)</span> </span>&#123;</span><br><span class="line">        Log.e(<span class="string">&quot;wush&quot;</span>, <span class="string">&quot;恢复失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>停止播放</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Service service = mCurrentDevice.findService(<span class="keyword">new</span> UDAServiceType(<span class="string">&quot;AVTransport&quot;</span>));</span><br><span class="line">mControlPoint.execute(<span class="keyword">new</span> Stop(service) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">success</span><span class="params">(ActionInvocation invocation)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.success(invocation);</span><br><span class="line"></span><br><span class="line">        runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">&quot;停止播放&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">failure</span><span class="params">(ActionInvocation invocation, UpnpResponse operation, String defaultMsg)</span> </span>&#123;</span><br><span class="line">        Log.e(<span class="string">&quot;wush&quot;</span>, <span class="string">&quot;停止失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="6、进度控制，音量控制"><a href="#6、进度控制，音量控制" class="headerlink" title="6、进度控制，音量控制"></a>6、进度控制，音量控制</h4><p>获取进度</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Service service = mCurrentDevice.findService(<span class="keyword">new</span> UDAServiceType(<span class="string">&quot;AVTransport&quot;</span>));</span><br><span class="line">mControlPoint.execute(<span class="keyword">new</span> GetPositionInfo(service) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">success</span><span class="params">(ActionInvocation invocation)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.success(invocation);</span><br><span class="line">        Log.e(<span class="string">&quot;wush&quot;</span>, <span class="string">&quot;获取进度成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">received</span><span class="params">(ActionInvocation invocation, PositionInfo positionInfo)</span> </span>&#123;</span><br><span class="line">        Log.e(<span class="string">&quot;wush&quot;</span>, positionInfo.toString());</span><br><span class="line">        <span class="comment">// 进度 positionInfo.getTrackDuration()</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">failure</span><span class="params">(ActionInvocation invocation, UpnpResponse operation, String defaultMsg)</span> </span>&#123;</span><br><span class="line">        Log.e(<span class="string">&quot;wush&quot;</span>, <span class="string">&quot;获取进度失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Seek进度</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Service service = mCurrentDevice.findService(<span class="keyword">new</span> UDAServiceType(<span class="string">&quot;AVTransport&quot;</span>));</span><br><span class="line"><span class="comment">// progress 为 &quot;00:00:00&quot;，String 类型</span></span><br><span class="line">mControlPoint.execute(<span class="keyword">new</span> Seek(service, progress) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">success</span><span class="params">(ActionInvocation invocation)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.success(invocation);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">failure</span><span class="params">(ActionInvocation invocation, UpnpResponse operation, String defaultMsg)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>获取音量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Service service = mCurrentDevice.findService(<span class="keyword">new</span> UDAServiceType(<span class="string">&quot;RenderingControl&quot;</span>));</span><br><span class="line">mControlPoint.execute(<span class="keyword">new</span> GetVolume(service) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">success</span><span class="params">(ActionInvocation invocation)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.success(invocation);</span><br><span class="line">        Log.e(<span class="string">&quot;wush&quot;</span>, <span class="string">&quot;获取音量成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">received</span><span class="params">(ActionInvocation actionInvocation, <span class="keyword">int</span> currentVolume)</span> </span>&#123;</span><br><span class="line">        Log.e(<span class="string">&quot;wush&quot;</span>, <span class="string">&quot;当前音量：&quot;</span> + currentVolume);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">failure</span><span class="params">(ActionInvocation invocation, UpnpResponse operation, String defaultMsg)</span> </span>&#123;</span><br><span class="line">        Log.e(<span class="string">&quot;wush&quot;</span>, <span class="string">&quot;获取音量失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>设置音量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Service service = mCurrentDevice.findService(<span class="keyword">new</span> UDAServiceType(<span class="string">&quot;RenderingControl&quot;</span>));</span><br><span class="line"><span class="comment">// volume 0 - 100 （小米盒子，其他设备没有测试具体范围）</span></span><br><span class="line">mControlPoint.execute(<span class="keyword">new</span> SetVolume(service, volume) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">success</span><span class="params">(ActionInvocation invocation)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.success(invocation);</span><br><span class="line">        Log.e(<span class="string">&quot;wush&quot;</span>, <span class="string">&quot;设置音量成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">failure</span><span class="params">(ActionInvocation invocation, UpnpResponse operation, String defaultMsg)</span> </span>&#123;</span><br><span class="line">        Log.e(<span class="string">&quot;wush&quot;</span>, <span class="string">&quot;设置音量失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h3><p>​            以上是推送模式实现的网络媒体资源播放，主要通过Cling实现的upnp协议，将媒体链接等播放信息封装成协议数据，发送给播放端进行播放。</p><p>​            还有一种是投屏播放手机本地视频（音频，图片），播放本地资源相对复杂一点，原理是需要在手机本地开启媒体服务推流，生成本地媒体资源的局域网访问地址，再推送给播放端播放（当然也是需要同一个局域网）。</p><p>​            有空持续更新…</p><p><img src="/hexo-blog/2020/10/29/Android-Cling%E6%8A%95%E5%B1%8F/3.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​    一年多之前买了个小米盒子，放在出租屋，HDMI 外接显示器当电视使用，用着确实很nice，看网络电视直播，用手机或者ipad投屏看剧。之前也业余搞过一个观看m3u8 源电视直播的app，主要是一些CCTV，卫视频道，一些电影和动漫直播链接都是虎牙拿过来（不稳定，老</summary>
      
    
    
    
    <category term="Android" scheme="https://wushaohong.gitee.io/categories/Android/"/>
    
    
    <category term="投屏" scheme="https://wushaohong.gitee.io/tags/%E6%8A%95%E5%B1%8F/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 撰写第一篇文章</title>
    <link href="https://wushaohong.gitee.io/2020/10/12/Hexo%E6%92%B0%E5%86%99%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <id>https://wushaohong.gitee.io/2020/10/12/Hexo%E6%92%B0%E5%86%99%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</id>
    <published>2020-10-12T11:16:17.112Z</published>
    <updated>2020-10-13T02:32:34.235Z</updated>
    
    <content type="html"><![CDATA[<p>通过 <a href="https://wushaohong.gitee.io/hexo-blog/2020/10/12/Hexo&Gitee/">Hexo 搭建博客与部署Gitee</a> 一文，已经完成了博客网站的基本搭建与使用。接下来，我们一起来撰写&amp;提交第一篇文章吧。</p><h2 id="第一篇文章"><a href="#第一篇文章" class="headerlink" title="第一篇文章"></a>第一篇文章</h2><h3 id="markdown-编写工具"><a href="#markdown-编写工具" class="headerlink" title="markdown 编写工具"></a>markdown 编写工具</h3><p>安装 <a href="https://www.typora.io/">Typora</a>，当然也可以安装其他markdown 编写工具</p><h3 id="编写markdown-文件"><a href="#编写markdown-文件" class="headerlink" title="编写markdown 文件"></a>编写markdown 文件</h3><p>使用安装的markdown 编写工具，编写文章，具体编写参照markdown 的语法规则，编写完保存在Hexo 工程目录/source/_posts/ 目录下</p><p><img src="/hexo-blog/2020/10/12/Hexo%E6%92%B0%E5%86%99%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/1.png" alt="Hexo 的helloworld 文章"></p><h3 id="引用图片资源"><a href="#引用图片资源" class="headerlink" title="引用图片资源"></a>引用图片资源</h3><p>图文并茂，写文章怎么不能没有图呢？</p><p>在 Hexo 工程目录/source/_posts/ 目录下创建与博客文件名一样的文件夹，将图片资源放入文件夹中</p><p><img src="/hexo-blog/2020/10/12/Hexo%E6%92%B0%E5%86%99%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/2.png"></p><p>文章当中引用图片资源，使用方式：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片标题](文件夹名称/图片名.后缀) # 例如 ![示例](Hexo撰写第一篇文章/1.png)</span><br></pre></td></tr></table></figure><p>此时在 md当中能够正常显示图片，但是这样直接更新到Gitee 是无法正常访问的，接下来解决图片上传显示的问题。</p><p>安装Hexo 图片资源插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>进入Hexo 项目工程/node_modules/hexo-asset-image/ ，修改index.js</p><p><img src="/hexo-blog/2020/10/12/Hexo%E6%92%B0%E5%86%99%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/3.png"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class="line"><span class="comment">// if not with index.html endpos = link.lastIndexOf(&#x27;.&#x27;) + 1 support hexo-abbrlink</span></span><br><span class="line">   <span class="keyword">if</span>(<span class="regexp">/.*\/index\.html$/</span>.test(link)) &#123;</span><br><span class="line">     <span class="comment">// when permalink is end with index.html, for example 2019/02/20/xxtitle/index.html</span></span><br><span class="line">     <span class="comment">// image in xxtitle/ will go to xxtitle/index/</span></span><br><span class="line">     appendLink = <span class="string">&#x27;index/&#x27;</span>;</span><br><span class="line">     <span class="keyword">var</span> endPos = link.lastIndexOf(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span> &#123;</span><br><span class="line">     <span class="comment">// 修改此处 *****</span></span><br><span class="line">     <span class="comment">// var endPos = link.lastIndexOf(&#x27;.&#x27;);</span></span><br><span class="line">     <span class="keyword">var</span> endPos = link.lastIndexOf(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   link = link.substring(beginPos, endPos) + <span class="string">&#x27;/&#x27;</span> + appendLink;</span><br></pre></td></tr></table></figure><p>修改工程项目的配置文件_config.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="本地运行"><a href="#本地运行" class="headerlink" title="本地运行"></a>本地运行</h3><p>使用Hexo 三连，清理，生成，启动本地服务，访问 <a href="http://localhost:4000/">http://localhost:4000/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><h3 id="更新到Gitee"><a href="#更新到Gitee" class="headerlink" title="更新到Gitee"></a>更新到Gitee</h3><p>使用命令，更新上传</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>或者使用，上传前，clean一下，并重新生成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure><p>此时，再进入Gitee Pages 服务，点击更新按钮，更新成功后就能看到新写的文章了。注意部分浏览器可能存在刷新缓存，Ctrl+F5 刷新一下吧</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;通过 &lt;a href=&quot;https://wushaohong.gitee.io/hexo-blog/2020/10/12/Hexo&amp;Gitee/&quot;&gt;Hexo 搭建博客与部署Gitee&lt;/a&gt; 一文，已经完成了博客网站的基本搭建与使用。接下来，我们一起来撰写&amp;amp;提交第一</summary>
      
    
    
    
    <category term="Hexo" scheme="https://wushaohong.gitee.io/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://wushaohong.gitee.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 搭建博客与部署Gitee</title>
    <link href="https://wushaohong.gitee.io/2020/10/12/Hexo&amp;Gitee/"/>
    <id>https://wushaohong.gitee.io/2020/10/12/Hexo&amp;Gitee/</id>
    <published>2020-10-12T01:19:37.915Z</published>
    <updated>2020-10-13T02:32:22.357Z</updated>
    
    <content type="html"><![CDATA[<p>​        前言（废话），大概在2016年的时候就接触过Hexo 了，那时候在“正班”大神他们的指引下了解过，当时候还搞了一下，只是搭建了一下环境，部署在了GitHub 上面，由于网络原因，GitHub 的访问体验确实很不好，最主要的原因还是当时没有持之以恒（懒）。</p><p>​        前阵子，日常登录简书的我发现来了条系统通知，我的文章莫名其妙被 <strong>“很抱歉您的文章《xxx》已转为仅自己可见，请您查看《为什么文章会被锁定？》参考相关内容规定。如您仍有疑问，您可以进入该文章页面，进行申诉，工作人员会在 1-2 个工作日内为您处理，感谢您的理解与支持。”</strong>，真是搞笑。当然，第一次被锁定，我脾气还好，老老实实去申诉了，结果第二天给我解锁了。搞不懂？让我申诉一下找找用户“存在感”？你以为这就完了？当然不是，过了几天，又发来通知说我另一篇文章被锁定了，通知和前一条一样…… Are you kidding me？实在搞不懂，所以我决定放弃简书这个平台。以前在CSDN 也写过一些，不过CSDN 的广告实在是太烦人了，上传的资源也被挂“高价”下载，真是呵呵…… </p><p>​        相信其他平台也会是这样，所以我决定放弃他们，重新拾起Hexo。下面内容以Windows10 系统操作&amp;撰写。</p><h2 id="Hexo搭建"><a href="#Hexo搭建" class="headerlink" title="Hexo搭建"></a>Hexo搭建</h2><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><p>（已安装的跳过此步骤）安装<a href="https://nodejs.org/">Node.js</a>，安装步骤没什么特别要求，安装路径最好养成良好的习惯，路径避免包含中文与空格字符</p><h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h3><p>（已安装的跳过此步骤）安装<a href="https://git-scm.com/">Git</a></p><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p>（已安装的跳过此步骤）在任一目录下，右击鼠标，Git Bash Here，此时打开了Git 的命令窗口，接着输入以下命令安装Hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="创建博客"><a href="#创建博客" class="headerlink" title="创建博客"></a>创建博客</h3><p>1、在电脑任意位置创建工程文件夹，名字随意就好（还是不要中文的好，后续需要上传Gitee 生成访问地址）。</p><p>2、进入1步骤创建的工程文件夹，右击鼠标，Git Bash Here，打开Git 命令窗口，输入以下命令初始化Hexo 工程项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p>3、完成2步骤，接着使用“Hexo 三连”命令，清空生成的静态文件、生成静态文件、启动本地服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate<span class="comment"># hexo g</span></span><br><span class="line">$ hexo server<span class="comment"># hexo s</span></span><br></pre></td></tr></table></figure><p>4、本地访问，浏览器输入地址 <a href="http://localhost:4000/">http://localhost:4000/</a> 就能访问Hexo 创建的博客网页了。需要停止本地服务的话，在Git 命令行上面 Ctrl+C 即可。</p><p><img src="/hexo-blog/2020/10/12/Hexo&Gitee/1.png"></p><p>5、更换主题，<a href="https://hexo.io/themes/">Hexo 官网</a>提供了丰富的主题样式，用户可以根据喜欢下载使用。打开官网主题网页，点击想要下载的主题，在主题页面找到GitHub 地址（或者是超链接的GitHub 图标），进入作者的GitHub，找到对应主题名称项目，点击进入主题项目，使用git clone下载或者直接下载zip 压缩包。<br>        将主题压缩包复制到Hexo 工程目录下的themes 文件夹下，解压到当前文件夹（或者clone 下来的主题工程复制到themes 文件夹下）。</p><p><img src="/hexo-blog/2020/10/12/Hexo&Gitee/2.png"></p><p>​        修改Hexo 工程根目录下的 _config.yml 内容（使用记事本/其他文本编辑工具），找到</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">hexo-theme-melody-dev</span><span class="comment"># 此处改成 theme目录下面要替换的主题的文件夹名称</span></span><br></pre></td></tr></table></figure><p>​        重复3、4步骤即可访问到替换后的博客主题了。</p><p>6、关于_config.yml</p><p>​        博客工程的主要配置文件，里面除了可以配置主题，还能够修改项目信息，后续的Gitee仓库信息也是配置在 _config.yml当中</p><p>*报错&amp;处理：遇到报错的话不要慌</p><p>​    （1）、更换主题后，访问 <a href="http://localhost:4000/">http://localhost:4000/</a> 出现以下错误，extends includes/layout.pug block content include includes/recent-posts.pug include</p><p>​        在Git 命令窗口，输入以下命令回车，并且重新Hexo 三连</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</span><br></pre></td></tr></table></figure><h2 id="Gitee部署"><a href="#Gitee部署" class="headerlink" title="Gitee部署"></a>Gitee部署</h2><h3 id="创建Gitee-的博客仓库"><a href="#创建Gitee-的博客仓库" class="headerlink" title="创建Gitee 的博客仓库"></a>创建Gitee 的博客仓库</h3><p>​        主要填写与Hexo 工程一样的名称，是否开源设置为开放，创建；创建成功后，在仓库页面找到到git 地址，如 <a href="mailto:&#103;&#x69;&#116;&#64;&#x67;&#105;&#116;&#101;&#101;&#x2e;&#x63;&#111;&#109;">&#103;&#x69;&#116;&#64;&#x67;&#105;&#116;&#101;&#101;&#x2e;&#x63;&#111;&#109;</a>:wushaohong/hexo-blog.git</p><h3 id="配置Hexo-仓库信息"><a href="#配置Hexo-仓库信息" class="headerlink" title="配置Hexo 仓库信息"></a>配置Hexo 仓库信息</h3><p>编辑_config.yml ，找到 Deployment节点</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span><span class="comment"># 修改成 git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@gitee.com:wushaohong/hexo-blog.git</span> <span class="comment"># 具体的仓库git地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span><span class="comment"># 分支设置为主干（目前没有其他分支）</span></span><br></pre></td></tr></table></figure><h3 id="Gitee-添加ssh-公钥"><a href="#Gitee-添加ssh-公钥" class="headerlink" title="Gitee 添加ssh 公钥"></a>Gitee 添加ssh 公钥</h3><p>1、使用Git 命令窗口，检查是否存在本主机的ssh 密钥，如果存在，则会返回以下信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/.ssh</span><br><span class="line">$ ls</span><br><span class="line">id_rsa  id_rsa.pub  known_hosts</span><br></pre></td></tr></table></figure><p>2、否则，手动创建本主机的ssh 密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>*接下来会提示是否在当前目录创建，输入 yes回车就好</p><p>*再接着会提示设置密码，密码随意，不设置的话回车两次，设置则输入回车，重复密码回车就好</p><p>3、创建成功的密钥后，使用命令将密钥信息复制到剪切板</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ clip &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>4、将密钥信息添加到Gitee</p><p>进入Gitee 博客仓库，管理，部署公钥管理，添加公钥，添加个人公钥，在公钥输入框粘贴，确定即可；</p><p>或者个人设置，SSH公钥，添加</p><p><img src="/hexo-blog/2020/10/12/Hexo&Gitee/3.png"></p><p>5、测试</p><p>#TODO</p><h3 id="部署到Gitee-仓库"><a href="#部署到Gitee-仓库" class="headerlink" title="部署到Gitee 仓库"></a>部署到Gitee 仓库</h3><p>回到Hexo 的项目文件夹，使用Git 命令窗口，部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure><p>提交成功后，回到Gitee 博客仓库，服务，Gitee Pages，启动服务即可获得访问网站地址，如：<a href="https://wushaohong.gitee.io/hexo-blog">https://wushaohong.gitee.io/hexo-blog</a></p><p><img src="/hexo-blog/2020/10/12/Hexo&Gitee/4.png"></p><p>*错误&amp;处理：</p><p>（1）、$ hexo d -g 报错：ERROR Deployer not found: git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><p>（2）、出现css等资源样式无法加载问题，不要慌，打开<a href="https://gitee.com/help/articles/4136#article-header0">Gitee Pages 帮助页面</a>， 常见问题的 2，具体根据项目名称修改即可。</p><p>例子工程config.yml 文件的URL 节点：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as &#x27;http://example.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://wushaohong.gitee.io/</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/hexo-blog</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br></pre></td></tr></table></figure><p><u>*修改后，需要重新，清理，部署</u></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure><p>再回到Gitee Pages服务页面，点击更新，就能通过网站地址正常访问了</p><p>（3）、部署的时候报错 DeployKey does not support push code fatal: Could not read from remote repository.</p><p>公钥不对，或者添加地方错了，需要添加为个人公钥</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​        前言（废话），大概在2016年的时候就接触过Hexo 了，那时候在“正班”大神他们的指引下了解过，当时候还搞了一下，只是搭建了一下环境，部署在了GitHub 上面，由于网络原因，GitHub 的访问体验确实很不好，最主要的原因还是当时没有持之以恒（懒）。&lt;</summary>
      
    
    
    
    <category term="Hexo" scheme="https://wushaohong.gitee.io/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://wushaohong.gitee.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://wushaohong.gitee.io/2020/10/11/hello-world/"/>
    <id>https://wushaohong.gitee.io/2020/10/11/hello-world/</id>
    <published>2020-10-11T03:58:16.498Z</published>
    <updated>2020-10-13T02:32:27.357Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="Hexo" scheme="https://wushaohong.gitee.io/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://wushaohong.gitee.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
